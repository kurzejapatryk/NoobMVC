name: PHP Composer
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Install extensions
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev libsodium-dev
        sudo apt-get install -y php-dev
        sudo apt-get install -y php-pear
        sudo apt-get install -y php-pear
        sudo pecl channel-update pecl.php.net
        sudo pecl upgrade pecl
        sudo pecl install xdebug
        sudo docker-php-ext-install mbstring pdo_pgsql pdo_mysql curl intl gd xml zip bz2 intl opcache sodium exif
        sudo docker-php-ext-enable xdebug

    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer

    - name: Install MySQL
      run: |
        sudo apt-get install -y mysql-server
        sudo mysql -e "CREATE DATABASE test_db;"
        sudo mysql -e "CREATE USER 'db_user'@'localhost' IDENTIFIED BY 'password123';"
        sudo mysql -e "GRANT ALL PRIVILEGES ON test_db.* TO 'db_user'@'localhost';"
        sudo mysql -e "FLUSH PRIVILEGES;"

    - name: Run tests
      run: |
        php noob.php -i --testdb
        vendor/bin/phpunit --configuration phpunit.xml
